{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/combokeys/Combokeys/index.js","node_modules/combokeys/Combokeys/prototype/addEvents.js","node_modules/combokeys/Combokeys/prototype/bind.js","node_modules/combokeys/Combokeys/prototype/bindMultiple.js","node_modules/combokeys/Combokeys/prototype/bindSequence.js","node_modules/combokeys/Combokeys/prototype/bindSingle.js","node_modules/combokeys/Combokeys/prototype/detach.js","node_modules/combokeys/Combokeys/prototype/dom-event.js","node_modules/combokeys/Combokeys/prototype/fireCallback.js","node_modules/combokeys/Combokeys/prototype/getKeyInfo.js","node_modules/combokeys/Combokeys/prototype/getMatches.js","node_modules/combokeys/Combokeys/prototype/getReverseMap.js","node_modules/combokeys/Combokeys/prototype/handleKey.js","node_modules/combokeys/Combokeys/prototype/handleKeyEvent.js","node_modules/combokeys/Combokeys/prototype/modifiersMatch.js","node_modules/combokeys/Combokeys/prototype/pickBestAction.js","node_modules/combokeys/Combokeys/prototype/reset.js","node_modules/combokeys/Combokeys/prototype/resetSequenceTimer.js","node_modules/combokeys/Combokeys/prototype/resetSequences.js","node_modules/combokeys/Combokeys/prototype/stopCallback.js","node_modules/combokeys/Combokeys/prototype/trigger.js","node_modules/combokeys/Combokeys/prototype/unbind.js","node_modules/combokeys/Combokeys/reset.js","node_modules/combokeys/helpers/characterFromEvent.js","node_modules/combokeys/helpers/eventModifiers.js","node_modules/combokeys/helpers/isModifier.js","node_modules/combokeys/helpers/keysFromString.js","node_modules/combokeys/helpers/preventDefault.js","node_modules/combokeys/helpers/shift-map.js","node_modules/combokeys/helpers/special-aliases.js","node_modules/combokeys/helpers/special-characters-map.js","node_modules/combokeys/helpers/special-keys-map.js","node_modules/combokeys/helpers/stopPropagation.js","src/js/canvas.js","src/js/entity.js","src/js/fab/randHex.js","src/js/fab/randInt.js","src/js/index.js","src/js/keyboard.js","src/js/scoreBoard.js","src/js/update.js","src/js/vec2.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"bullet.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* eslint-env node, browser */\n'use strict'\n\nmodule.exports = function (element) {\n  var self = this\n  var Combokeys = self.constructor\n\n  /**\n   * a list of all the callbacks setup via Combokeys.bind()\n   *\n   * @type {Object}\n   */\n  self.callbacks = {}\n\n  /**\n   * direct map of string combinations to callbacks used for trigger()\n   *\n   * @type {Object}\n   */\n  self.directMap = {}\n\n  /**\n   * keeps track of what level each sequence is at since multiple\n   * sequences can start out with the same sequence\n   *\n   * @type {Object}\n   */\n  self.sequenceLevels = {}\n\n  /**\n   * variable to store the setTimeout call\n   *\n   * @type {null|number}\n   */\n  self.resetTimer\n\n  /**\n   * temporary state where we will ignore the next keyup\n   *\n   * @type {boolean|string}\n   */\n  self.ignoreNextKeyup = false\n\n  /**\n   * temporary state where we will ignore the next keypress\n   *\n   * @type {boolean}\n   */\n  self.ignoreNextKeypress = false\n\n  /**\n   * are we currently inside of a sequence?\n   * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n   *\n   * @type {boolean|string}\n   */\n  self.nextExpectedAction = false\n\n  self.element = element\n\n  self.addEvents()\n\n  Combokeys.instances.push(self)\n  return self\n}\n\nmodule.exports.prototype.bind = require('./prototype/bind')\nmodule.exports.prototype.bindMultiple = require('./prototype/bindMultiple')\nmodule.exports.prototype.unbind = require('./prototype/unbind')\nmodule.exports.prototype.trigger = require('./prototype/trigger')\nmodule.exports.prototype.reset = require('./prototype/reset.js')\nmodule.exports.prototype.stopCallback = require('./prototype/stopCallback')\nmodule.exports.prototype.handleKey = require('./prototype/handleKey')\nmodule.exports.prototype.addEvents = require('./prototype/addEvents')\nmodule.exports.prototype.bindSingle = require('./prototype/bindSingle')\nmodule.exports.prototype.getKeyInfo = require('./prototype/getKeyInfo')\nmodule.exports.prototype.pickBestAction = require('./prototype/pickBestAction')\nmodule.exports.prototype.getReverseMap = require('./prototype/getReverseMap')\nmodule.exports.prototype.getMatches = require('./prototype/getMatches')\nmodule.exports.prototype.resetSequences = require('./prototype/resetSequences')\nmodule.exports.prototype.fireCallback = require('./prototype/fireCallback')\nmodule.exports.prototype.bindSequence = require('./prototype/bindSequence')\nmodule.exports.prototype.resetSequenceTimer = require('./prototype/resetSequenceTimer')\nmodule.exports.prototype.detach = require('./prototype/detach')\n\nmodule.exports.instances = []\nmodule.exports.reset = require('./reset')\n\n/**\n * variable to store the flipped version of MAP from above\n * needed to check if we should use keypress or not when no action\n * is specified\n *\n * @type {Object|undefined}\n */\nmodule.exports.REVERSE_MAP = null\n","/* eslint-env node, browser */\n'use strict'\nmodule.exports = function () {\n  var self = this\n  var on = require('./dom-event')\n  var element = self.element\n\n  self.eventHandler = require('./handleKeyEvent').bind(self)\n\n  on(element, 'keypress', self.eventHandler)\n  on(element, 'keydown', self.eventHandler)\n  on(element, 'keyup', self.eventHandler)\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * binds an event to Combokeys\n *\n * can be a single key, a combination of keys separated with +,\n * an array of keys, or a sequence of keys separated by spaces\n *\n * be sure to list the modifier keys first to make sure that the\n * correct key ends up getting bound (the last key in the pattern)\n *\n * @param {string|Array} keys\n * @param {Function} callback\n * @param {string=} action - \"keypress\", \"keydown\", or \"keyup\"\n * @returns void\n */\nmodule.exports = function (keys, callback, action) {\n  var self = this\n\n  keys = keys instanceof Array ? keys : [keys]\n  self.bindMultiple(keys, callback, action)\n  return self\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * binds multiple combinations to the same callback\n *\n * @param {Array} combinations\n * @param {Function} callback\n * @param {string|undefined} action\n * @returns void\n */\nmodule.exports = function (combinations, callback, action) {\n  var self = this\n\n  for (var j = 0; j < combinations.length; ++j) {\n    self.bindSingle(combinations[j], callback, action)\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * binds a key sequence to an event\n *\n * @param {string} combo - combo specified in bind call\n * @param {Array} keys\n * @param {Function} callback\n * @param {string=} action\n * @returns void\n */\nmodule.exports = function (combo, keys, callback, action) {\n  var self = this\n\n  // start off by adding a sequence level record for this combination\n  // and setting the level to 0\n  self.sequenceLevels[combo] = 0\n\n  /**\n   * callback to increase the sequence level for this sequence and reset\n   * all other sequences that were active\n   *\n   * @param {string} nextAction\n   * @returns {Function}\n   */\n  function increaseSequence (nextAction) {\n    return function () {\n      self.nextExpectedAction = nextAction\n      ++self.sequenceLevels[combo]\n      self.resetSequenceTimer()\n    }\n  }\n\n  /**\n   * wraps the specified callback inside of another function in order\n   * to reset all sequence counters as soon as this sequence is done\n   *\n   * @param {Event} e\n   * @returns void\n   */\n  function callbackAndReset (e) {\n    var characterFromEvent\n    self.fireCallback(callback, e, combo)\n\n    // we should ignore the next key up if the action is key down\n    // or keypress.  this is so if you finish a sequence and\n    // release the key the final key will not trigger a keyup\n    if (action !== 'keyup') {\n      characterFromEvent = require('../../helpers/characterFromEvent')\n      self.ignoreNextKeyup = characterFromEvent(e)\n    }\n\n    // weird race condition if a sequence ends with the key\n    // another sequence begins with\n    setTimeout(\n      function () {\n        self.resetSequences()\n      },\n      10\n    )\n  }\n\n  // loop through keys one at a time and bind the appropriate callback\n  // function.  for any key leading up to the final one it should\n  // increase the sequence. after the final, it should reset all sequences\n  //\n  // if an action is specified in the original bind call then that will\n  // be used throughout.  otherwise we will pass the action that the\n  // next key in the sequence should match.  this allows a sequence\n  // to mix and match keypress and keydown events depending on which\n  // ones are better suited to the key provided\n  for (var j = 0; j < keys.length; ++j) {\n    var isFinal = j + 1 === keys.length\n    var wrappedCallback = isFinal ? callbackAndReset : increaseSequence(action || self.getKeyInfo(keys[j + 1]).action)\n    self.bindSingle(keys[j], wrappedCallback, action, combo, j)\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * binds a single keyboard combination\n *\n * @param {string} combination\n * @param {Function} callback\n * @param {string=} action\n * @param {string=} sequenceName - name of sequence if part of sequence\n * @param {number=} level - what part of the sequence the command is\n * @returns void\n */\nmodule.exports = function (combination, callback, action, sequenceName, level) {\n  var self = this\n\n  // store a direct mapped reference for use with Combokeys.trigger\n  self.directMap[combination + ':' + action] = callback\n\n  // make sure multiple spaces in a row become a single space\n  combination = combination.replace(/\\s+/g, ' ')\n\n  var sequence = combination.split(' ')\n  var info\n\n  // if this pattern is a sequence of keys then run through this method\n  // to reprocess each pattern one key at a time\n  if (sequence.length > 1) {\n    self.bindSequence(combination, sequence, callback, action)\n    return\n  }\n\n  info = self.getKeyInfo(combination, action)\n\n  // make sure to initialize array if this is the first time\n  // a callback is added for this key\n  self.callbacks[info.key] = self.callbacks[info.key] || []\n\n  // remove an existing match if there is one\n  self.getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level)\n\n  // add this call back to the array\n  // if it is a sequence put it at the beginning\n  // if not put it at the end\n  //\n  // this is important because the way these are processed expects\n  // the sequence ones to come first\n  self.callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n    callback: callback,\n    modifiers: info.modifiers,\n    action: info.action,\n    seq: sequenceName,\n    level: level,\n    combo: combination\n  })\n}\n","var off = require('./dom-event').off\nmodule.exports = function () {\n  var self = this\n  var element = self.element\n\n  off(element, 'keypress', self.eventHandler)\n  off(element, 'keydown', self.eventHandler)\n  off(element, 'keyup', self.eventHandler)\n}\n","module.exports = on\nmodule.exports.on = on\nmodule.exports.off = off\n\nfunction on (element, event, callback, capture) {\n  !element.addEventListener && (event = 'on' + event)\n  ;(element.addEventListener || element.attachEvent).call(element, event, callback, capture)\n  return callback\n}\n\nfunction off (element, event, callback, capture) {\n  !element.removeEventListener && (event = 'on' + event)\n  ;(element.removeEventListener || element.detachEvent).call(element, event, callback, capture)\n  return callback\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * actually calls the callback function\n *\n * if your callback function returns false this will use the jquery\n * convention - prevent default and stop propogation on the event\n *\n * @param {Function} callback\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (callback, e, combo, sequence) {\n  var self = this\n  var preventDefault\n  var stopPropagation\n\n  // if this event should not happen stop here\n  if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n    return\n  }\n\n  if (callback(e, combo) === false) {\n    preventDefault = require('../../helpers/preventDefault')\n    preventDefault(e)\n    stopPropagation = require('../../helpers/stopPropagation')\n    stopPropagation(e)\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * Gets info for a specific key combination\n *\n * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n * @param  {string=} action\n * @returns {Object}\n */\nmodule.exports = function (combination, action) {\n  var self = this\n  var keysFromString\n  var keys\n  var key\n  var j\n  var modifiers = []\n  var SPECIAL_ALIASES\n  var SHIFT_MAP\n  var isModifier\n\n  keysFromString = require('../../helpers/keysFromString')\n  // take the keys from this pattern and figure out what the actual\n  // pattern is all about\n  keys = keysFromString(combination)\n\n  SPECIAL_ALIASES = require('../../helpers/special-aliases')\n  SHIFT_MAP = require('../../helpers/shift-map')\n  isModifier = require('../../helpers/isModifier')\n  for (j = 0; j < keys.length; ++j) {\n    key = keys[j]\n\n    // normalize key names\n    if (SPECIAL_ALIASES[key]) {\n      key = SPECIAL_ALIASES[key]\n    }\n\n    // if this is not a keypress event then we should\n    // be smart about using shift keys\n    // this will only work for US keyboards however\n    if (action && action !== 'keypress' && SHIFT_MAP[key]) {\n      key = SHIFT_MAP[key]\n      modifiers.push('shift')\n    }\n\n    // if this key is a modifier then add it to the list of modifiers\n    if (isModifier(key)) {\n      modifiers.push(key)\n    }\n  }\n\n  // depending on what the key combination is\n  // we will try to pick the best event for it\n  action = self.pickBestAction(key, modifiers, action)\n\n  return {\n    key: key,\n    modifiers: modifiers,\n    action: action\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * finds all callbacks that match based on the keycode, modifiers,\n * and action\n *\n * @param {string} character\n * @param {Array} modifiers\n * @param {Event|Object} e\n * @param {string=} sequenceName - name of the sequence we are looking for\n * @param {string=} combination\n * @param {number=} level\n * @returns {Array}\n */\nmodule.exports = function (character, modifiers, e, sequenceName, combination, level) {\n  var self = this\n  var j\n  var callback\n  var matches = []\n  var action = e.type\n  var isModifier\n  var modifiersMatch\n\n  if (\n      action === 'keypress' &&\n      // Firefox fires keypress for arrows\n      !(e.code && e.code.slice(0, 5) === 'Arrow')\n  ) {\n    // 'any-character' callbacks are only on `keypress`\n    var anyCharCallbacks = self.callbacks['any-character'] || []\n    anyCharCallbacks.forEach(function (callback) {\n      matches.push(callback)\n    })\n  }\n\n  if (!self.callbacks[character]) { return matches }\n\n  isModifier = require('../../helpers/isModifier')\n  // if a modifier key is coming up on its own we should allow it\n  if (action === 'keyup' && isModifier(character)) {\n    modifiers = [character]\n  }\n\n  // loop through all callbacks for the key that was pressed\n  // and see if any of them match\n  for (j = 0; j < self.callbacks[character].length; ++j) {\n    callback = self.callbacks[character][j]\n\n    // if a sequence name is not specified, but this is a sequence at\n    // the wrong level then move onto the next match\n    if (!sequenceName && callback.seq && self.sequenceLevels[callback.seq] !== callback.level) {\n      continue\n    }\n\n    // if the action we are looking for doesn't match the action we got\n    // then we should keep going\n    if (action !== callback.action) {\n      continue\n    }\n\n    // if this is a keypress event and the meta key and control key\n    // are not pressed that means that we need to only look at the\n    // character, otherwise check the modifiers as well\n    //\n    // chrome will not fire a keypress if meta or control is down\n    // safari will fire a keypress if meta or meta+shift is down\n    // firefox will fire a keypress if meta or control is down\n    modifiersMatch = require('./modifiersMatch')\n    if ((action === 'keypress' && !e.metaKey && !e.ctrlKey) || modifiersMatch(modifiers, callback.modifiers)) {\n      // when you bind a combination or sequence a second time it\n      // should overwrite the first one.  if a sequenceName or\n      // combination is specified in this call it does just that\n      //\n      // @todo make deleting its own method?\n      var deleteCombo = !sequenceName && callback.combo === combination\n      var deleteSequence = sequenceName && callback.seq === sequenceName && callback.level === level\n      if (deleteCombo || deleteSequence) {\n        self.callbacks[character].splice(j, 1)\n      }\n\n      matches.push(callback)\n    }\n  }\n\n  return matches\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * reverses the map lookup so that we can look for specific keys\n * to see what can and can't use keypress\n *\n * @return {Object}\n */\nmodule.exports = function () {\n  var self = this\n  var constructor = self.constructor\n  var SPECIAL_KEYS_MAP\n\n  if (!constructor.REVERSE_MAP) {\n    constructor.REVERSE_MAP = {}\n    SPECIAL_KEYS_MAP = require('../../helpers/special-keys-map')\n    for (var key in SPECIAL_KEYS_MAP) {\n      // pull out the numeric keypad from here cause keypress should\n      // be able to detect the keys from the character\n      if (key > 95 && key < 112) {\n        continue\n      }\n\n      if (SPECIAL_KEYS_MAP.hasOwnProperty(key)) {\n        constructor.REVERSE_MAP[SPECIAL_KEYS_MAP[key]] = key\n      }\n    }\n  }\n  return constructor.REVERSE_MAP\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * handles a character key event\n *\n * @param {string} character\n * @param {Array} modifiers\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (character, modifiers, e) {\n  var self = this\n  var callbacks\n  var j\n  var doNotReset = {}\n  var maxLevel = 0\n  var processedSequenceCallback = false\n  var isModifier\n  var ignoreThisKeypress\n\n  callbacks = self.getMatches(character, modifiers, e)\n  // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n  for (j = 0; j < callbacks.length; ++j) {\n    if (callbacks[j].seq) {\n      maxLevel = Math.max(maxLevel, callbacks[j].level)\n    }\n  }\n\n  // loop through matching callbacks for this key event\n  for (j = 0; j < callbacks.length; ++j) {\n    // fire for all sequence callbacks\n    // this is because if for example you have multiple sequences\n    // bound such as \"g i\" and \"g t\" they both need to fire the\n    // callback for matching g cause otherwise you can only ever\n    // match the first one\n    if (callbacks[j].seq) {\n      // only fire callbacks for the maxLevel to prevent\n      // subsequences from also firing\n      //\n      // for example 'a option b' should not cause 'option b' to fire\n      // even though 'option b' is part of the other sequence\n      //\n      // any sequences that do not match here will be discarded\n      // below by the resetSequences call\n      if (callbacks[j].level !== maxLevel) {\n        continue\n      }\n\n      processedSequenceCallback = true\n\n      // keep a list of which sequences were matches for later\n      doNotReset[callbacks[j].seq] = 1\n      self.fireCallback(callbacks[j].callback, e, callbacks[j].combo, callbacks[j].seq)\n      continue\n    }\n\n    // if there were no sequence matches but we are still here\n    // that means this is a regular match so we should fire that\n    if (!processedSequenceCallback) {\n      self.fireCallback(callbacks[j].callback, e, callbacks[j].combo)\n    }\n  }\n\n  // if the key you pressed matches the type of sequence without\n  // being a modifier (ie \"keyup\" or \"keypress\") then we should\n  // reset all sequences that were not matched by this event\n  //\n  // this is so, for example, if you have the sequence \"h a t\" and you\n  // type \"h e a r t\" it does not match.  in this case the \"e\" will\n  // cause the sequence to reset\n  //\n  // modifier keys are ignored because you can have a sequence\n  // that contains modifiers such as \"enter ctrl+space\" and in most\n  // cases the modifier key will be pressed before the next key\n  //\n  // also if you have a sequence such as \"ctrl+b a\" then pressing the\n  // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n  //\n  // the \"keydown\" is expected when there is a modifier, but the\n  // \"keypress\" ends up matching the nextExpectedAction since it occurs\n  // after and that causes the sequence to reset\n  //\n  // we ignore keypresses in a sequence that directly follow a keydown\n  // for the same character\n  ignoreThisKeypress = e.type === 'keypress' && self.ignoreNextKeypress\n  isModifier = require('../../helpers/isModifier')\n  if (e.type === self.nextExpectedAction && !isModifier(character) && !ignoreThisKeypress) {\n    self.resetSequences(doNotReset)\n  }\n\n  self.ignoreNextKeypress = processedSequenceCallback && e.type === 'keydown'\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * handles a keydown event\n *\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (e) {\n  var self = this\n  var characterFromEvent\n  var eventModifiers\n\n  // normalize e.which for key events\n  // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n  if (typeof e.which !== 'number') {\n    e.which = e.keyCode\n  }\n  characterFromEvent = require('../../helpers/characterFromEvent')\n  var character = characterFromEvent(e)\n\n  // no character found then stop\n  if (!character) {\n    return\n  }\n\n  // need to use === for the character check because the character can be 0\n  if (e.type === 'keyup' && self.ignoreNextKeyup === character) {\n    self.ignoreNextKeyup = false\n    return\n  }\n\n  eventModifiers = require('../../helpers/eventModifiers')\n  self.handleKey(character, eventModifiers(e), e)\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * checks if two arrays are equal\n *\n * @param {Array} modifiers1\n * @param {Array} modifiers2\n * @returns {boolean}\n */\nmodule.exports = function (modifiers1, modifiers2) {\n  return modifiers1.sort().join(',') === modifiers2.sort().join(',')\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * picks the best action based on the key combination\n *\n * @param {string} key - character for key\n * @param {Array} modifiers\n * @param {string=} action passed in\n */\nmodule.exports = function (key, modifiers, action) {\n  var self = this\n\n  // if no action was picked in we should try to pick the one\n  // that we think would work best for this key\n  if (!action) {\n    action = self.getReverseMap()[key] ? 'keydown' : 'keypress'\n  }\n\n  // modifier keys don't work as expected with keypress,\n  // switch to keydown\n  if (action === 'keypress' && modifiers.length) {\n    action = 'keydown'\n  }\n\n  return action\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * resets the library back to its initial state. This is useful\n * if you want to clear out the current keyboard shortcuts and bind\n * new ones - for example if you switch to another page\n *\n * @returns void\n */\nmodule.exports = function () {\n  var self = this\n  self.callbacks = {}\n  self.directMap = {}\n  return this\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * called to set a 1 second timeout on the specified sequence\n *\n * this is so after each key press in the sequence you have 1 second\n * to press the next key before you have to start over\n *\n * @returns void\n */\nmodule.exports = function () {\n  var self = this\n\n  clearTimeout(self.resetTimer)\n  self.resetTimer = setTimeout(\n    function () {\n      self.resetSequences()\n    },\n    1000\n  )\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * resets all sequence counters except for the ones passed in\n *\n * @param {Object} doNotReset\n * @returns void\n */\nmodule.exports = function (doNotReset) {\n  var self = this\n\n  doNotReset = doNotReset || {}\n\n  var activeSequences = false\n  var key\n\n  for (key in self.sequenceLevels) {\n    if (doNotReset[key]) {\n      activeSequences = true\n      continue\n    }\n    self.sequenceLevels[key] = 0\n  }\n\n  if (!activeSequences) {\n    self.nextExpectedAction = false\n  }\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n* should we stop this event before firing off callbacks\n*\n* @param {Event} e\n* @param {Element} element\n* @return {boolean}\n*/\nmodule.exports = function (e, element) {\n  // if the element has the class \"combokeys\" then no need to stop\n  if ((' ' + element.className + ' ').indexOf(' combokeys ') > -1) {\n    return false\n  }\n\n  var tagName = element.tagName.toLowerCase()\n\n  // stop for input, select, and textarea\n  return tagName === 'input' || tagName === 'select' || tagName === 'textarea' || element.isContentEditable\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * triggers an event that has already been bound\n *\n * @param {string} keys\n * @param {string=} action\n * @returns void\n */\nmodule.exports = function (keys, action) {\n  var self = this\n  if (self.directMap[keys + ':' + action]) {\n    self.directMap[keys + ':' + action]({}, keys)\n  }\n  return this\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * unbinds an event to Combokeys\n *\n * the unbinding sets the callback function of the specified key combo\n * to an empty function and deletes the corresponding key in the\n * directMap dict.\n *\n * TODO: actually remove this from the callbacks dictionary instead\n * of binding an empty function\n *\n * the keycombo+action has to be exactly the same as\n * it was defined in the bind method\n *\n * @param {string|Array} keys\n * @param {string} action\n * @returns void\n */\nmodule.exports = function (keys, action) {\n  var self = this\n\n  return self.bind(keys, function () {}, action)\n}\n","/* eslint-env node, browser */\n'use strict'\n\nmodule.exports = function () {\n  var self = this\n\n  self.instances.forEach(function (combokeys) {\n    combokeys.reset()\n  })\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * takes the event and returns the key character\n *\n * @param {Event} e\n * @return {string}\n */\nmodule.exports = function (e) {\n  var SPECIAL_KEYS_MAP,\n    SPECIAL_CHARACTERS_MAP\n  SPECIAL_KEYS_MAP = require('./special-keys-map')\n  SPECIAL_CHARACTERS_MAP = require('./special-characters-map')\n\n  // for keypress events we should return the character as is\n  if (e.type === 'keypress') {\n    var character = String.fromCharCode(e.which)\n\n    // if the shift key is not pressed then it is safe to assume\n    // that we want the character to be lowercase.  this means if\n    // you accidentally have caps lock on then your key bindings\n    // will continue to work\n    //\n    // the only side effect that might not be desired is if you\n    // bind something like 'A' cause you want to trigger an\n    // event when capital A is pressed caps lock will no longer\n    // trigger the event.  shift+a will though.\n    if (!e.shiftKey) {\n      character = character.toLowerCase()\n    }\n\n    return character\n  }\n\n  // for non keypress events the special maps are needed\n  if (SPECIAL_KEYS_MAP[e.which]) {\n    return SPECIAL_KEYS_MAP[e.which]\n  }\n\n  if (SPECIAL_CHARACTERS_MAP[e.which]) {\n    return SPECIAL_CHARACTERS_MAP[e.which]\n  }\n\n  // if it is not in the special map\n\n  // with keydown and keyup events the character seems to always\n  // come in as an uppercase character whether you are pressing shift\n  // or not.  we should make sure it is always lowercase for comparisons\n  return String.fromCharCode(e.which).toLowerCase()\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * takes a key event and figures out what the modifiers are\n *\n * @param {Event} e\n * @returns {Array}\n */\nmodule.exports = function (e) {\n  var modifiers = []\n\n  if (e.shiftKey) {\n    modifiers.push('shift')\n  }\n\n  if (e.altKey) {\n    modifiers.push('alt')\n  }\n\n  if (e.ctrlKey) {\n    modifiers.push('ctrl')\n  }\n\n  if (e.metaKey) {\n    modifiers.push('meta')\n  }\n\n  return modifiers\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * determines if the keycode specified is a modifier key or not\n *\n * @param {string} key\n * @returns {boolean}\n */\nmodule.exports = function (key) {\n  return key === 'shift' || key === 'ctrl' || key === 'alt' || key === 'meta'\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * Converts from a string key combination to an array\n *\n * @param  {string} combination like \"command+shift+l\"\n * @return {Array}\n */\nmodule.exports = function (combination) {\n  if (combination === '+') {\n    return ['+']\n  }\n\n  return combination.split('+')\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * prevents default for this event\n *\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (e) {\n  if (e.preventDefault) {\n    e.preventDefault()\n    return\n  }\n\n  e.returnValue = false\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * this is a mapping of keys that require shift on a US keypad\n * back to the non shift equivelents\n *\n * this is so you can use keyup events with these keys\n *\n * note that this will only work reliably on US keyboards\n *\n * @type {Object}\n */\nmodule.exports = {\n  '~': '`',\n  '!': '1',\n  '@': '2',\n  '#': '3',\n  '$': '4',\n  '%': '5',\n  '^': '6',\n  '&': '7',\n  '*': '8',\n  '(': '9',\n  ')': '0',\n  '_': '-',\n  '+': '=',\n  ':': ';',\n  '\"': \"'\",\n  '<': ',',\n  '>': '.',\n  '?': '/',\n  '|': '\\\\'\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * this is a list of special strings you can use to map\n * to modifier keys when you specify your keyboard shortcuts\n *\n * @type {Object}\n */\nmodule.exports = {\n  'option': 'alt',\n  'command': 'meta',\n  'return': 'enter',\n  'escape': 'esc',\n  'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * mapping for special characters so they can support\n *\n * this dictionary is only used incase you want to bind a\n * keyup or keydown event to one of these keys\n *\n * @type {Object}\n */\nmodule.exports = {\n  106: '*',\n  107: '+',\n  109: '-',\n  110: '.',\n  111: '/',\n  186: ';',\n  187: '=',\n  188: ',',\n  189: '-',\n  190: '.',\n  191: '/',\n  192: '`',\n  219: '[',\n  220: '\\\\',\n  221: ']',\n  222: \"'\"\n}\n","/* eslint-env node, browser */\n'use strict'\n/**\n * mapping of special keycodes to their corresponding keys\n *\n * everything in this dictionary cannot use keypress events\n * so it has to be here to map to the correct keycodes for\n * keyup/keydown events\n *\n * @type {Object}\n */\nmodule.exports = {\n  8: 'backspace',\n  9: 'tab',\n  13: 'enter',\n  16: 'shift',\n  17: 'ctrl',\n  18: 'alt',\n  20: 'capslock',\n  27: 'esc',\n  32: 'space',\n  33: 'pageup',\n  34: 'pagedown',\n  35: 'end',\n  36: 'home',\n  37: 'left',\n  38: 'up',\n  39: 'right',\n  40: 'down',\n  45: 'ins',\n  46: 'del',\n  91: 'meta',\n  93: 'meta',\n  187: 'plus',\n  189: 'minus',\n  224: 'meta'\n}\n\n/**\n * loop through the f keys, f1 to f19 and add them to the map\n * programatically\n */\nfor (var i = 1; i < 20; ++i) {\n  module.exports[111 + i] = 'f' + i\n}\n\n/**\n * loop through to map numbers on the numeric keypad\n */\nfor (i = 0; i <= 9; ++i) {\n  module.exports[i + 96] = i\n}\n","/* eslint-env node, browser */\n'use strict'\n\n/**\n * stops propogation for this event\n *\n * @param {Event} e\n * @returns void\n */\nmodule.exports = function (e) {\n  if (e.stopPropagation) {\n    e.stopPropagation()\n    return\n  }\n\n  e.cancelBubble = true\n}\n","var randInt = require('./fab/randInt');\n\nvar canvas = document.getElementById('canvas');\nvar c = canvas.getContext('2d');\n\nvar imgs = {\n\tthisIsYou: document.getElementById('imgthisIsYou')\n};\n\nmodule.exports = {\n\tgetSize: function() {\n\t\treturn { x: window.innerWidth, y: window.innerHeight };\n\t},\n\tgetCenter: function() {\n\t\treturn { x: window.innerWidth/2, y: window.innerHeight/2 };\n\t},\n\tgetRandomBoundPoint: function() {\n\t\tif(Math.random() >= 0.5) {\n\t\t\treturn { x: randInt(0,window.innerWidth), y: 0 };\n\t\t}\n\t\treturn { x: 0, y: randInt(0,window.innerHeight) };\n\t},\n\n\tresize: function() {\n\t\tcanvas.width = window.innerWidth;\n\t\tcanvas.height = window.innerHeight;\n\t},\n\n\thide: function() {\n\t\tcanvas.style.display = 'none';\n\t},\n\n\timg: function(imgStr, x,y) {\n\t\tc.drawImage(imgs[imgStr],x,y);\n\t},\n\n\tcircle: function(entity) {\n\t\tc.fillStyle = entity.color;\n\t\tc.beginPath();\n\t\tc.arc(entity.pos.x, entity.pos.y, entity.radius, 0, 2*Math.PI);\n\t\tc.fill();\n\t},\n\n\toutlineCircle: function(entity) {\n\t\tc.fillStyle = entity.color;\n\t\tc.strokeStyle = entity.strokeColor;\n\t\tc.beginPath();\n\t\tc.arc(entity.pos.x, entity.pos.y, entity.radius, 0, 2*Math.PI);\n\t\tc.fill();\n\t\tc.stroke();\n\t},\n\n\tclear: function() {\n\t\tc.fillStyle = 'white';\n\t\tc.fillRect(0,0,canvas.width,canvas.height);\n\t},\n\n\ttext: function(pos,text,size,color) {\n\t\tc.fillStyle = color;\n\t\tc.font = size.toString() + 'px Helvetica';\n\t\tc.fillStyle(text, pos.x, pos.y);\n\t}\n};\n","var vec2 = require('./vec2');\n\nfunction pytha(pos1, pos2) {\n\treturn Math.sqrt(\n\t\t((pos1.x - pos2.x) * (pos1.x - pos2.x)) +\n\t\t((pos1.y - pos2.y) * (pos1.y - pos2.y))\n\t);\n}\n\nfunction distanceCheck(ent1, ent2) {\n\tvar pythaSol = pytha(ent1.pos, ent2.pos);\n\treturn pythaSol < (ent1.radius + ent2.radius);\n}\n\nfunction squareCheck(ent1, ent2) {\n\treturn !(\n\t\t(ent1.pos.x + ent1.radius) < (ent2.pos.x - ent2.radius) ||\n\t\t(ent1.pos.y + ent1.radius) < (ent2.pos.y - ent2.radius) ||\n\t\t(ent1.pos.x - ent1.radius) > (ent2.pos.x + ent2.radius) ||\n\t\t(ent1.pos.y - ent1.radius) > (ent2.pos.y + ent2.radius)\n\t);\n}\n\nfunction limit1DVel(vel, maxVel) {\n\tif(vel > 0) {\n\t\treturn vel >= maxVel ? maxVel : vel;\n\t}\n\treturn vel <= -maxVel ? -maxVel: vel;\n}\n\nfunction limitVel(entity) {\n\treturn {\n\t\tx: limit1DVel(entity.vel.x, entity.maxVel.x),\n\t\ty: limit1DVel(entity.vel.y, entity.maxVel.y)\n\t};\n}\n\nmodule.exports = {\n\tcreate: function(frag) {\n\t\treturn {\n\t\t\tradius: frag.radius || 4,\n\t\t\tcolor: frag.color || 'black',\n\t\t\t\n\t\t\tpos: frag.pos || {x: 0, y: 0},\n\t\t\tposOffset: frag.posOffset || {x: 0, y: 0},\n\t\t\t\n\t\t\tvel: frag.vel || {x: 0, y: 0},\n\t\t\tmaxVel: frag.maxVel || {x: 0, y: 0},\n\t\t\t\n\t\t\tacel: frag.acel || {x: 0, y: 0}\n\t\t};\n\t},\n\t\n\tcheckCollision: function(ent1, ent2) {\n\t\treturn squareCheck(ent1, ent2) && distanceCheck(ent1, ent2);\n\t},\n\n\tacel: function(entity) {\n\t\tentity.vel.y += entity.acel.y;\n\t\tentity.vel.x += entity.acel.x;\n\t},\n\t\n\tmove: function(entity) {\n\t\tentity.vel = limitVel(entity);\n\n\t\tentity.pos = vec2.add(entity.pos, entity.vel);\n\t},\n\n\tmoveWithKeyboard: function(entity, keyboard) {\n\t\tif(keyboard.up) {\n\t\t\tentity.vel.y -= entity.acel.y;\n\t\t}\n\t\tif(keyboard.down) {\n\t\t\tentity.vel.y += entity.acel.y;\n\t\t}\n\t\tif(keyboard.left) {\n\t\t\tentity.vel.x -= entity.acel.x;\n\t\t}\n\t\tif(keyboard.right) {\n\t\t\tentity.vel.x += entity.acel.x;\n\t\t}\n\t\t\n\t\tthis.move(entity);\n\t},\n\n\tmoveWithPlayer: function(entity, basePlayer) {\n\t\tentity.pos = vec2.sub(basePlayer.pos, entity.posOffset);\n\t},\n\t\n\tswapAround: function(entity, canvasSize) {\n\t\t// Y Axis\n\t\tif(entity.pos.y > canvasSize.y) {\n\t\t\tentity.pos.y -= canvasSize.y;\n\t\t}\n\t\telse if(entity.pos.y < 0) {\n\t\t\tentity.pos.y += canvasSize.y;\n\t\t}\n\t\n\t\t// X Axis\n\t\tif(entity.pos.x > canvasSize.x) {\n\t\t\tentity.pos.x -= canvasSize.x;\n\t\t}\n\t\telse if(entity.pos.x < 0) {\n\t\t\tentity.pos.x += canvasSize.x;\n\t\t}\n\t}\n};\n","module.exports = function() {\n\treturn '#'+Math.random().toString(16).substr(-6);\n};\n","module.exports = function(min,max) {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n};\n","document.addEventListener(\"DOMContentLoaded\", function(event) {\n\tvar update = require('./update');\n\n\tvar menu = document.getElementById('menu');\n\tvar startButton = document.getElementById('start');\n\tvar scoreBoards = document.getElementById('scoreBoards');\n\n\tstartButton.onclick = function() {\n\t\tmenu.style.display = 'none';\n\t\tscoreBoards.style.display = 'block';\n\n\t\tupdate.renderLoop();\n\t\tupdate.secondsLoop();\n\t};\n});\n","var Combokeys = require('combokeys');\nvar canvasInput = new Combokeys(document.documentElement);\n\nvar kb = {\n\tup: false, down: false, left: false, right: false\n};\n\ncanvasInput.bind('up', function()    { kb.up = true;     }, 'keydown');\ncanvasInput.bind('up', function()    { kb.up = false;    }, 'keyup');\ncanvasInput.bind('down', function()  { kb.down = true;   }, 'keydown');\ncanvasInput.bind('down', function()  { kb.down = false;  }, 'keyup');\ncanvasInput.bind('left', function()  { kb.left = true;   }, 'keydown');\ncanvasInput.bind('left', function()  { kb.left = false;  }, 'keyup');\ncanvasInput.bind('right', function() { kb.right = true;  }, 'keydown');\ncanvasInput.bind('right', function() { kb.right = false; }, 'keyup');\n\nmodule.exports = kb;\n","var dom = {\n\tscoreBoards: document.getElementById('scoreBoards'),\n\tavoidingSeconds: document.getElementById('secondsAvoided'),\n\tsecondsLeft: document.getElementById('secondsLeft'),\n\tamountCollected: document.getElementById('amountCollected')\n};\n\nmodule.exports = {\n\tavoidingSeconds: 0,\n\tsecondsLeft: 20,\n\tamountCollected: 0,\n\n\tupdateDOM: function() {\n\t\tdom.avoidingSeconds.innerHTML = this.avoidingSeconds;\n\t\tdom.secondsLeft.innerHTML = this.secondsLeft;\n\t\tdom.amountCollected.innerHTML = this.amountCollected;\n\t},\n\n\thide: function() {\n\t\tdom.scoreBoards.style.display = 'none';\n\t}\n};\n","var vec2 = require('./vec2.js');\nvar randInt = require('./fab/randInt');\nvar randHex = require('./fab/randHex');\n\nvar entity = require('./entity');\nvar canvas = require('./canvas');\nvar keyboard = require('./keyboard');\n\nvar scoreBoard = require('./scoreBoard');\n\nvar playerArray = [];\nvar bulletArray = [];\n\nvar frame = -1;\nvar seconds = -1;\n\ncanvas.resize();\n\nvar basePlayer = entity.create({\n\tradius: 5,\n\tcolor: 'white',\n\toutlineColor: 'black',\n\n\tpos: canvas.getCenter(),\n\n\tmaxVel: {x: 3, y: 3},\n\tacel: {x: 0.4, y: 0.4}\n});\n\nvar avoiding = true;\nvar finished = false;\n\nfunction checkCollision(playerEntity) {\n\tfor(var b=0, bLen=bulletArray.length; b < bLen; b++) {\n\t\tif(bulletArray[b] && entity.checkCollision(playerEntity,bulletArray[b])) {\n\t\t\tlet bulletToMove = bulletArray[b];\n\n\t\t\tplayerArray.push(entity.create({\n\t\t\t\tradius: bulletToMove.radius,\n\t\t\t\tcolor: bulletToMove.color,\n\t\t\t\tpos: bulletToMove.pos,\n\t\t\t\tposOffset: vec2.sub(basePlayer.pos, bulletToMove.pos)\n\t\t\t}));\n\n\t\t\tbulletArray.splice(b,1);\n\n\t\t\tif(avoiding) {\n\t\t\t\tavoiding = false;\n\t\t\t\tdocument.getElementById('avoidBoard').style.opacity = '0.25';\n\t\t\t\tdocument.getElementById('collectBoard').style.display = 'block';\n\t\t\t}\n\n\t\t\tscoreBoard.amountCollected++;\n\t\t\tscoreBoard.updateDOM();\n\t\t}\n\t}\n}\n\nvar hasMoved = false;\n\nfunction renderLoop() {\n\tframe++;\n\tcanvas.clear();\n\n\tvar canvasSize = canvas.getSize();\n\n\tif(!hasMoved) {\n\t\tcanvas.img('thisIsYou',canvasSize.x / 2 - (70),canvasSize.y / 2 - (123));\n\t\tif(keyboard.up || keyboard.down || keyboard.left || keyboard.right) {\n\t\t\thasMoved = true;\n\t\t}\n\t}\n\n\tfor(var i=0; i < bulletArray.length; i++) {\n\t\tif(bulletArray[i]) {\n\t\t\tlet bulletEntity = bulletArray[i];\n\n\t\t\tentity.move(bulletEntity);\n\t\t\tentity.acel(bulletEntity);\n\t\t\tentity.swapAround(bulletEntity, canvasSize);\n\n\t\t\tcanvas.circle(bulletEntity);\n\t\t}\n\t}\n\n\tentity.moveWithKeyboard(basePlayer, keyboard);\n\tentity.swapAround(basePlayer, canvasSize);\n\tcanvas.outlineCircle(basePlayer);\n\tcheckCollision(basePlayer);\n\n\tfor(var p=0; p < playerArray.length; p++) {\n\t\tlet playerEntity = playerArray[p];\n\n\t\tentity.moveWithPlayer(playerEntity, basePlayer);\n\t\tentity.swapAround(playerEntity, canvasSize);\n\n\t\tcanvas.circle(playerEntity);\n\t\tcheckCollision(playerEntity);\n\t}\n\n\tif(!finished) {\n\t\twindow.requestAnimationFrame(renderLoop);\n\t}\n}\n\nfunction secondsLoop() {\n\tseconds++;\n\n\tif(hasMoved) {\n\t\tif(avoiding) {\n\t\t\tscoreBoard.avoidingSeconds++;\n\t\t} else {\n\t\t\tscoreBoard.secondsLeft--;\n\n\t\t\tif(scoreBoard.secondsLeft <= 0) {\n\t\t\t\tfinished = true;\n\t\t\t}\n\t\t}\n\n\t\tscoreBoard.updateDOM();\n\n\t\tif(bulletArray.length <= 130) {\n\t\t\tbulletArray.push(entity.create({\n\t\t\t\tradius: randInt(7,14),\n\t\t\t\tcolor: randHex(),\n\n\t\t\t\tpos: canvas.getRandomBoundPoint(),\n\t\t\t\tmaxVel: {\n\t\t\t\t\tx: ((Math.random() * seconds/7) + 1),\n\t\t\t\t\ty: ((Math.random() * seconds/7) + 1)\n\t\t\t\t},\n\t\t\t\tacel: {\n\t\t\t\t\tx: Math.random() < 0.5 ? -0.005 : 0.005,\n\t\t\t\t\ty: Math.random() < 0.5 ? -0.005 : 0.005\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tif(!finished) {\n\t\tsetTimeout(secondsLoop, 1000);\n\t\t// TODO TEMP TODO TEMP\n\t\tfinish();\n\t} else {\n\t\tfinish();\n\t}\n}\n\nfunction finish() {\n\tscoreBoard.hide();\n\tcanvas.hide();\n\tdocument.getElementById('menuContainer').style.display = 'none';\n\tdocument.getElementById('finish').style.display = 'block';\n}\n\nmodule.exports = {\n\trenderLoop: renderLoop,\n\tsecondsLoop: secondsLoop\n};\n","function add(firstVec, secondVec) {\n\treturn { x: firstVec.x + secondVec.x, y: firstVec.y + secondVec.y };\n}\n\nfunction sub(firstVec, secondVec) {\n\treturn { x: firstVec.x - secondVec.x, y: firstVec.y - secondVec.y };\n}\n\nfunction multi(firstVec, secondVec) {\n\treturn { x: firstVec.x * secondVec.x, y: firstVec.y * secondVec.y };\n}\n\nmodule.exports = {\n\tadd: add,\n\tsub: sub,\n\tmulti: multi\n};\n"]}